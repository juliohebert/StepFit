// Script tempor√°rio para limpar dados fantasma das dietas
import { collection, deleteDoc, doc, getDocs } from 'firebase/firestore';
import { db } from './config/firebase';

const clearCollectionFromFirebase = async (collectionName) => {
  try {
    console.log(`üßπ Iniciando limpeza da cole√ß√£o ${collectionName}...`);
    const querySnapshot = await getDocs(collection(db, collectionName));
    
    console.log(`üìä Encontrados ${querySnapshot.size} documentos na cole√ß√£o ${collectionName}`);
    
    for (const docSnap of querySnapshot.docs) {
      console.log(`üóëÔ∏è Removendo documento ${docSnap.id}:`, docSnap.data());
      await deleteDoc(doc(db, collectionName, docSnap.id));
    }
    
    console.log(`‚úÖ Limpeza da cole√ß√£o ${collectionName} conclu√≠da`);
  } catch (error) {
    console.error(`‚ùå Erro ao limpar cole√ß√£o ${collectionName}:`, error);
  }
};

const debugCollectionContents = async (collectionName) => {
  try {
    console.log(`üîç Verificando conte√∫do da cole√ß√£o ${collectionName}...`);
    const querySnapshot = await getDocs(collection(db, collectionName));
    
    console.log(`üìä Total de documentos na cole√ß√£o ${collectionName}: ${querySnapshot.size}`);
    
    querySnapshot.forEach((doc) => {
      console.log(`üìÑ Documento ${doc.id}:`, doc.data());
    });
    
    if (querySnapshot.size === 0) {
      console.log(`‚úÖ Cole√ß√£o ${collectionName} est√° vazia (como esperado)`);
    }
  } catch (error) {
    console.error(`‚ùå Erro ao verificar cole√ß√£o ${collectionName}:`, error);
  }
};

const runClearGhostData = async () => {
  console.log('üöÄ INICIANDO LIMPEZA DE DADOS FANTASMA');
  
  // Verificar conte√∫do antes
  await debugCollectionContents('planos_dieta');
  await debugCollectionContents('dietPlans');
  
  // Limpar ambas as cole√ß√µes
  await clearCollectionFromFirebase('planos_dieta');
  await clearCollectionFromFirebase('dietPlans');
  
  // Verificar conte√∫do depois
  console.log('üîÑ Verificando se limpeza foi efetiva...');
  await debugCollectionContents('planos_dieta');
  await debugCollectionContents('dietPlans');
  
  console.log('‚úÖ LIMPEZA CONCLU√çDA');
};

// Executar a limpeza
runClearGhostData().catch(console.error);